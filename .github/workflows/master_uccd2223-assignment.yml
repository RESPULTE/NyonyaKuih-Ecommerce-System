name: Build and deploy Node.js app to Azure Web App - uccd2223-assignment

on:
  push:
    branches:
      - master # Triggers on push to the 'master' branch
  workflow_dispatch: # Allows manual trigger from GitHub Actions tab

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      # Removed Node.js setup and npm commands since it's a static site
      # If you had client-side JS build steps (like Webpack for React/Vue),
      # you would put 'npm install' and 'npm run build' here and
      # adjust the 'path' in upload-artifact to point to the build output (e.g., 'dist').
      # But for your current file structure, this is likely not needed.

      - name: Archive Web Content
        uses: actions/upload-artifact@v4
        with:
          name: web-app-content
          path: . # <-- Upload the ENTIRE repository content, as index.html and assets are at root

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - name: Download Web Content artifact
        uses: actions/download-artifact@v4
        with:
          name: web-app-content
          path: ./site_root # <-- Download into a temporary folder named 'site_root'

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_C3FAB52A70D94D14B7308B1059FA4DC1 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_9381D7F27FF348A0B877273D891EAFC5 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_1C284838966F41DEAC33696F91EB1C68 }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'uccd2223-assignment'
          slot-name: 'Production'
          package: ./site_root # <-- Deploy the contents of the 'site_root' folder